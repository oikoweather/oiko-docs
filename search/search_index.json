{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Overview on Oikolab Weather Data","text":"<p>It is often said that 80% of data analysis is spent on the process of cleaning and preparing the data. - Hadley Wickham, Chief Scientist at RStudio</p>"},{"location":"#why-oikolab","title":"Why Oikolab?","text":"<p>Data scientists or analysts often spend days or weeks looking for and processing historical weather data before they can begin their analysis. Here\u2019s where Oikolab comes in \u2013 we do the work, so you don\u2019t have to. We save you the most valuable, scarce, and non-renewable resource in the world \u2013 your time.</p> <p>We provide post-processed datasets from national weather agencies such as NCEP/NOAA, ECMWF, and Environment Canada. These data are often publicly available, but come in a format (GRIB) that is very time consuming to download and use.</p> ERA5ERA5LandGFSGEFSCFSHRRRSILAM (Air Quality) <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>Ready to jump right into your analysis? Oikolab has post-processed hundreds of terabytes of weather data that you can access in seconds - whether you require 1 month or 80 years of weather data.</p> <p>Here are some examples of what you can do with Oikolab API:</p> <ul> <li>Building Simulation - Download AMY EPW files for any location from 1940 to present. </li> <li>Asset Management - Have assets in hundreds of locations? Download time-series weather data for all locations with a single API call.</li> <li>Climate Change Analysis - Get decades of weather parameter time-series data in seconds.</li> </ul>"},{"location":"#dataset-overview","title":"Dataset Overview","text":"<p>We're always adding datasets. If you need something that we don\u2019t have, please feel free to reach out and ask!</p> Type Dataset Resolution Coverage Updates Source Reanalysis ERA5  ERA5-Land 28km  9km from 1940  from 1950 DailyMonthly ECMWF Global  Forecast GFS 13/25km 16 days 6 hrs NCEP Regional  Forecast HRRR 2.5km 2 days 6 hrs NCEP Seasonal  Forecast CFS 100km 9 months Daily NCEP Ensemble Forecast GEFS 25km 10 days 6 hrs NCEP Air Quality Forecast SILAM 20km 5 days Daily FMI"},{"location":"about/","title":"About Oikolab","text":"<p>We started Oikolab to make climate and weather data easier to work with. We're a small operation but we take pride in the fact that we run one of the largest and most comprehensive weather data repositories in the world.</p> <p>Since 2018, we have processed more than a petabyte of data and we continue to process multiple terabytes of data every day.</p>"},{"location":"about/#questions","title":"Questions?","text":"<p>We would love to hear from you! Feel free to reach out to us anytime at support@oikolab.com for comments, suggestions, or questions.</p>"},{"location":"datasets/","title":"Datasets","text":"<p>The following datasets are currently available via API.</p> Dataset Notes ERA5 ERA5 is the latest generation of the reanalysis dataset produced by ECMWF, updated daily.  The next generation of reanalysis data, ERA6, is currently in the works and is expected to be released sometime in 2024. Surface data is available from 1940 to present with a 5-day delay. ERA5Land ERA5Land data is a high-resolution dataset covering only the land, with about 9km x 9km resolution. Data is available from 1950 to present with a 5-day delay. GFS Global Forecast System CFS Climate Forecast System from NCEP HRRR High-Resolution Rapid Refresh (HRRR) model SILAM SILAM is air quality dataset from the Finnish Meteorological Institute (FMI) <p>For GFS and HRRR, we archive forecast data generated at 00Z and 12Z for up to 2 years.</p>"},{"location":"datasets/#parameters","title":"Parameters","text":"<p>The following is a list of parameters available through Oikolab API. Please note that not all parameters will be available for every model.</p>"},{"location":"datasets/#group-1-temperature","title":"Group 1: Temperature","text":"Parameter Unit Description temperature <sup>o</sup>C Drybulb temperature of the air at 2 m above the surface of land, sea or inland waters. dewpoint_temperature <sup>o</sup>C The temperature to which the air at 2 m above the surface of the Earth would have to be cooled for saturation to occur. wetbulb_temperature <sup>o</sup>C The temperature read by a thermometer covered in water-soaked cloth over which air is passed. Reference humidex_index <sup>o</sup>C Humidex Index as defined by Canadian Meteorologists soil_temperature_level_1 <sup>o</sup>C Soil temperature at level 1 (0 - 7 cm), in the middle of layer. soil_temperature_level_2 <sup>o</sup>C Soil temperature at level 2 (7 - 28 cm), in the middle of layer. soil_temperature_level_3 <sup>o</sup>C Soil temperature at level 3 (28 - 100 cm), in the middle of layer. soil_temperature_level_4 <sup>o</sup>C Soil temperature at level 4 (100 - 289 cm), in the middle of layer. skin_temperature <sup>o</sup>C The theoretical temperature that is required to satisfy the surface energy balance; it represents the temperature of the uppermost surface layer, which has no heat capacity."},{"location":"datasets/#group-2-wind","title":"Group 2: Wind","text":"Parameter Unit Description wind_speed m/s Wind speed at 10 m above the surface. wind_direction deg Wind direction at 10 m above the surface. 10m_wind_gust m/s Instantaneous wind gust at 10 m above surface. 10m_u_component_of_wind m/s U component of wind at 10 m above the surface. 10m_v_component_of_wind m/s V component of wind at 10 m above the surface. 100m_wind_speed m/s Wind speed at 100 m above the surface. 100m_wind_direction deg Wind direction at 100 m above the surface. 100m_u_component_of_wind m/s U component of wind at 100 m above the surface. 100m_v_component_of_wind m/s V component of wind at 100 m above the surface."},{"location":"datasets/#group-3-radiation","title":"Group 3: Radiation","text":"Parameter Unit Description surface_solar_radiation W/m<sup>2</sup> Solar radiation (shortwave) that reaches a horizontal plane at the surface of the Earth. This parameter comprises both direct and diffuse solar radiation. surface_net_solar_radiation W/m<sup>2</sup> Solar radiation (shortwave) that reaches a horizontal plane at the surface of the Earth minus the amount reflected by the Earth's surface (which is governed by the albedo). This value is positive downwards, following the ECMWF convention. surface_thermal_radiation W/m<sup>2</sup> Thermal radiation (longwave) emitted by the atmosphere and clouds that reaches a horizontal plane at the surface of the Earth. surface_net_thermal_radiation W/m<sup>2</sup> This parameter is the difference between downward and upward thermal radiation at the surface of the Earth. This value is positive downwards, following the ECMWF convention. surface_direct_solar_radiation W/m<sup>2</sup> Direct solar radiation (shortwave) reaching the surface of the Earth, passing through a horizontal plane. direct_normal_solar_radiation W/m<sup>2</sup> Solar radiation received per unit area normal to the direction of the sun. surface_diffuse_solar_radiation W/m<sup>2</sup> Scattered solar radiation received per horizontal unit area on the surface."},{"location":"datasets/#group-4-pressure-humidity-precipitation","title":"Group 4: Pressure, Humidity, &amp; Precipitation","text":"Parameter Unit Description relative_humidity - Relative humidity calculated from dewpoint temperature, drybulb temperature, and pressure. surface_pressure Pa The pressure (force per unit area) of the atmosphere at the surface of land, sea, and inland water. mean_sea_level_pressure Pa The pressure (force per unit area) of the atmosphere at sea level. total_cloud_cover - Single level field calculated from the cloud occurring at different model levels through the atmosphere. total_precipitation mm The accumulated liquid and frozen water, comprising rain and snow, that falls to the Earth's surface. It is the sum of large-scale precipitation and convective precipitation. snowfall mm The accumulated snow that falls to the Earth's surface. It is the sum of large-scale snowfall and convective snowfall. volumetric_soil_water_layer_1 - Soil moisture at level 1 (0 - 7 cm) volumetric_soil_water_layer_2 - Soil moisture at level 2 (7 - 28 cm) volumetric_soil_water_layer_3 - Soil moisture at level 3 (28 - 100 cm) volumetric_soil_water_layer_4 - Soil moisture at level 4 (100 - 289 cm)"},{"location":"datasets/#group-5-other-parameters","title":"Group 5: Other Parameters","text":"Parameter Unit Description boundary_layer_height m The depth of air next to the Earth's surface which is most affected by the resistance to the transfer of momentum, heat, or moisture across the surface. cloud_base_height m The height above the Earth's surface of the base of the lowest cloud layer, at the specified time. convective_available_potential_energy J/kg Indication of the instability (or stability) of the atmosphere and can be used to assess the potential for the development of convection, which can lead to heavy rainfall, thunderstorms, and other severe weather. convective_inhibition J/kg This parameter is a measure of the amount of energy required for convection to commence. downward_uv_radiation_at_the_surface W/m<sup>2</sup> The amount of ultraviolet (UV) radiation reaching the surface. It is the amount of radiation passing through a horizontal plane. evaporation mm The accumulated amount of water that has evaporated from the Earth's surface, including a simplified representation of transpiration (from vegetation), into vapour in the air above. forecast_albedo - A measure of the reflectivity of the Earth's surface. forecast_surface_roughness m The aerodynamic roughness length in metres as a measure of the surface resistance. friction_velocity m/s A theoretical wind speed at the Earth's surface that expresses the magnitude of stress. high_cloud_cover - The proportion of a grid box covered by cloud occurring in the high levels of the troposphere. high_vegetation_cover - The fraction of the grid box that is covered with vegetation that is classified as \"high\". The values vary between 0 and 1 but do not vary in time. leaf_area_index_high_vegetation m<sup>2</sup>/m<sup>2</sup> The surface area of one side of all the leaves found over an area of land for vegetation classified as \"high\". leaf_area_index_low_vegetation m<sup>2</sup>/m<sup>2</sup> The surface area of one side of all the leaves found over an area of land for vegetation classified as \"low\". low_cloud_cover - The proportion of a grid box covered by cloud occurring in the lower levels of the troposphere. low_vegetation_cover - The fraction of the grid box that is covered with vegetation that is classified as \"low\". The values vary between 0 and 1 but do not vary in time. medium_cloud_cover - The proportion of a grid box covered by cloud occurring in the middle levels of the troposphere. potential_evaporation mm A measure of the extent to which near-surface atmospheric conditions are conducive to the process of evaporation. skin_reservoir_content mm The amount of water in the vegetation canopy and/or in a thin layer on the soil. sub_surface_runoff mm The water  that drains away under the ground. surface_latent_heat_flux W/m<sup>2</sup> The transfer of latent heat (resulting from water phase changes, such as evaporation or condensation) between the Earth's surface and the atmosphere. surface_runoff mm The water  that drains away over the ground. total_column_rain_water kg/m<sup>2</sup> The total amount of water in droplets of raindrop size (which can fall to the surface as precipitation) in a column extending from the surface of the Earth to the top of the atmosphere. total_column_water_vapour kg/m<sup>2</sup> The total amount of water vapour in a column extending from the surface of the Earth to the top of the atmosphere. zero_degree_level m The height above the Earth's surface where the temperature passes from positive to negative values, corresponding to the top of a warm layer."},{"location":"datasets/#group-6-air-quality","title":"Group 6: Air Quality","text":"Parameter Unit Description CO ug/m<sup>3</sup> Carbon Monoxide NO ug/m<sup>3</sup> Nitrogen Oxide NO2 ug/m<sup>3</sup> Nitrogen Dixoide O3 ug/m<sup>3</sup> Ozone PM10 ug/m<sup>3</sup> Particulate Matters (PM) inhalable particles, with diameters that are generally 10 micrometers and smaller PM25 ug/m<sup>3</sup> Particulate Matters (PM) inhalable particles, with diameters that are generally 2.5 micrometers and smaller SO2 ug/m<sup>3</sup> Sulfur Dioxide"},{"location":"faq/","title":"Oikolab FAQ","text":""},{"location":"faq/#what-does-oiko-mean","title":"What does 'Oiko' mean?","text":"<p>The word 'oiko' derives from Greek 'oikos', which is the origin of the word 'eco'. </p> <p>Did you know?</p> <p>In Korean, 'oiko' is a homonym of 'cucumber nose'.</p>"},{"location":"faq/#how-do-you-derive-the-recent-5-days-historical-data","title":"How do you derive the recent (&lt; 5 days) historical data?","text":"<p>New weather forecast data is created every 6 to 12 hours and reanalysis datasets such as ERA5 are published with a 5-day delay. This gap is filled using the first 6 hours of global forecast data. As the reanalysis data is published, these data points will be over-written.</p> <p>Checking data source</p> <p>With every data timestamp, we indicate the dataset source.</p>"},{"location":"faq/#whats-the-difference-between-reanalysis-vs-observation-data","title":"What's the difference between Reanalysis vs. Observation data?","text":"<p>We get this question a lot, especially from those who are used to getting weather data from weather stations. In engineering and science, we recognize that perfect observation is not possible and even if you're measuring air temperature with a digital thermometer, it is a modelled representation of the air temperature. </p> <p>What the thermometer is telling you is that according to the model of the resistence values of a thermistor, the current reading corresponds to a temperature. Notice that this is not the temperature of the air but the temperature of the thermistor itself - here is an implicit assumption that the temperature of the thermistor will be approximately the same as the air. </p> <p>In reality, we know that if there is a large warm body nearby (e.g. a Boeing 747 taxing) this measurement will be skewed. We know this intuitively - if we were sweating in Hong Kong in July and the temperature reads -20 <sup>o</sup>C, it's likely that the reading is wrong.</p> <p>So how do we know if what we're measuring is correct? The trick is to combine all sources of data - so that instead of a single measurement, we take billions of sample data, and we combine them with our known understanding of atmospheric physics to yield the most representative estimate of the weather.</p> <p>All models are wrong, but some are useful. - George Box</p> <p> </p> NASA Apollo 17 image of the Earth taken on 7 December 1972 vs. ECMWF forecast initialized with ERA5 reanalysis Reanalysis Data Weather Station Data Data Collection Method Reanalysis data is generated using numerical weather prediction models that assimilate various observational data sources, including weather station observations, satellite measurements, and other available data into its atmospheric physics model. Weather station observation data is collected directly from ground-based weather stations that measure various meteorological variables like temperature, humidity, wind speed, and precipitation. Typically, these don't include solar radiation data. Data Assimilation and Quality Control Reanalysis data undergoes a rigorous process of data assimilation, where observational data from various sources are combined with the model's output to generate a representation of the atmosphere that is consistent with our understanding of atmosheric physics. Weather station observations are subject to quality control procedures as well, but the level of scrutiny may vary depending on the data source and the organization responsible for data management. Limitations Model resolution Observation Bias and Quality Control. Limited sets of variables. <p>In general, we recommend using Reanalysis data for most data-intensive application, such as training machine learning models, building energy simulation and forecast prediction. For extreme weather events, it may be more reliable to consult the weather station observation if there is a station nearby. If you're not sure, we're always happy to provide guidance - please feel free to reach out.</p>"},{"location":"faq/#what-are-data-units","title":"What are Data Units?","text":"<p>With a single API call, the returned data size can range anywhere from 10 KB to 10 GB so we meter the usage based on the concept of 'data unit'. One data unit is equivalent to a single parameter for a location for a period of one month for a time-series data, or 1<sup>o</sup> latitude by 1<sup>o</sup> longitude by 1 month for NetCDF area format.</p> <p>For example, requesting 10 years of temperature and wind speed data for 10 locations is:</p> <ul> <li>10 years x 12 months x 2 parameters x 10 locations = 2400 units</li> </ul> <p>Alternatively, an area box for Texas will be:</p> <ul> <li>11<sup>o</sup> latitude x 13<sup>o</sup> longitude x 1 month x 5 parameters = 715 units</li> </ul>"},{"location":"faq/#can-you-provide-custom-datasets","title":"Can you provide custom datasets?","text":"<p>Yes! Please contact us at info@oikolab.com for any special project needs.</p>"},{"location":"quickstart/","title":"Quick Start","text":"<p>From zero to weather hero in 5 minutes.</p> <p>So - how do you get weather data via API? When you make a data request via API, we need to know three key things:</p> <ul> <li>Where - so we know the location you're interested in. This can be an address or a city name that we can look up, the latitutde/longitude coordiates, or a latitude/longitude boundary. </li> <li>When - so we know the time span of the data to fetch, since we have more than 80 years of data. If not specified the default period (from 3 days past to 7 days into the future) will be used.</li> <li>What - so we know which weather parameters or dataset you're interested in. We have more than 60 parameters and many different datasets. If not specified, it will default to <code>temperature</code>, <code>dewpoint_temperature</code>, <code>wind_speed</code>, <code>mean_sea_level_pressure</code>, <code>surface_solar_radiation</code>, <code>surface_thermal_radiation</code>, and <code>total_cloud_cover</code>.</li> </ul>"},{"location":"quickstart/#basic-example","title":"Basic Example","text":"<p>Let's start with a simple example - requesting temperature and wind speed data for Toronto, Ontario, for the last 30 years (1990 to 2020). </p> <p>The data is accessed using REST API by specifying the location, the parameters, and the time-range of the data needed as shown below.</p> PythonR <pre><code>import requests \n\napi_key = 'your-api-key'\nurl = 'https://api.oikolab.com/weather'\n\n# Call the endpoint to get the data\nr = requests.get(url,\n                 params={'param': 'temperature',\n                         'location': 'Toronto, Ontario',\n                         'start': '1990-01-01',\n                         'end': '2020-12-31'}\n                 headers={'api-key': api_key}\n                 )\n</code></pre> <pre><code>library(httr)\n\napi_key &lt;- 'your-api-key'\nurl &lt;- 'https://api.oikolab.com/weather'\n\n# Call the endpoint to get the data\nresult &lt;- GET(url,\n              query=list(param='temperature',\n                         location='Toronto, Ontario',\n                         start='1990-01-01',\n                         end='2020-12-31'),\n              add_headers('api-key'=api_key)\n              )\n</code></pre> <p>Don't forget to use your API key!</p> <p>You can find your API key on the profile page when you log into your account.</p> <p>This will return data in JSON format, which we can convert to dataframe using Python's Pandas library. Note that the dataset name is returned so you always know which dataset was used to generate the data.</p> <pre><code>import pandas as pd\nimport json\n\nweather_data = json.loads(r.json()['data'])\n\ndf = pd.DataFrame(index=pd.to_datetime(weather_data['index'],unit='s'),\n                  data=weather_data['data'],\n                  columns=weather_data['columns'])\n</code></pre> datetime coordinates (lat,lon) model (name) model elevation (surface) utc_offset (hrs) temperature (degC) 2023-06-10 00:00:00 (43.653482, -79.383935) era5 127.19 -5 18.48 2023-06-10 01:00:00 (43.653482, -79.383935) era5 127.19 -5 17.96 2023-06-10 02:00:00 (43.653482, -79.383935) era5 127.19 -5 17.29 2023-06-10 03:00:00 (43.653482, -79.383935) era5 127.19 -5 16.44"},{"location":"references/","title":"Endpoints","text":"<p>The following endpoints are available.</p>"},{"location":"references/#weather","title":"/weather","text":"<p>This is the basic entry point into our datasets. </p> Parameter Description Notes param Valid parameters Default: temperature, dewpoint_temperature, wind_speed, mean_sea_level_pressure, surface_solar_radiation, surface_thermal_radiation, total_cloud_cover start start datetime string <code>YYYY-MM-DD</code> Defaults to 3 days into the past. Provided time is interpreted as UTC. end end datetime string <code>YYYY-MM-DD</code> Defaults to 7 days into the future. Provided time is interpreted as UTC. freq <code>H</code> (hourly), <code>D</code> (daily), or <code>M</code> (monthly) Defaults to <code>H</code> (hourly) resample_method max, mean, min, or sum When the frequency is set to daily (D) or monthly (M), use this to specify the aggregation method. location city name or zipcode This value is used to look up latitude/longitude. location_id reference for location This is handy when making requests for multiple locations. lat latitude(s) If location is not provided. lon longitude(s) If location is not provided. north latitude north For bounding box. south latitude south For bounding box. east longitude east For bounding box. west longitude west For bounding box. model <code>era5</code>, <code>era5land</code>, <code>gfs</code>, <code>gefs</code>, <code>hrrr</code>, <code>cfs</code> Use to specify dataset if applicable. format <code>json</code>, <code>csv</code>, or <code>netcdf</code> Defaults to json format. <p>Example 1 - Requesting multiple locations</p> PythonR <pre><code>import requests\n\napi_key = 'your-api-key'\nurl = 'https://api.oikolab.com/weather'\n\nr = requests.get(url,\n                 params={'param': ['temperature', 'wind_speed'],\n                         'lat': [23.1, 42.1],\n                         'lon': [114.1, -79.3],\n                         'location_id': ['store1', 'store2'],\n                         'start': '2022-01-01',\n                         'end': '2022-12-31'}\n                 headers={'api-key': api_key}\n                 )\n</code></pre> <pre><code>library(httr)\n\napi_key &lt;- 'your-api-key'\nurl &lt;- \"https://api.oikolab.com/weather\"\n\nqueryString &lt;- list(\n    param = 'temperature', param = 'wind_speed',    \n    start = '2022-01-01',\n    end = '2022-12-31',\n    lat = 23.1, lat = 42.1,\n    lon = 114.1, lon = -79.3,\n    location_id = 'store1', location_id = 'store2')\n\nresponse &lt;- GET(url, query=queryString, add_headers('api-key'=api_key))\n</code></pre> <p>Example 2 - Requesting a region</p> <p>Let's say we wanted to look at the regional weather forecast for all of New England. We can request the data by specifying the bounding box for New England as shown below:</p> <pre><code>import requests\n\napi_key = 'your-api-key'\n\nr = requests.get('https://api.oikolab.com/weather',\n                 params={'north': 47.38,\n                         'south': 39.5,\n                         'east': -65.2,\n                         'west': -80.8,\n                         'model': 'hrrr'}\n                 headers={'api-key': api_key}\n                 )\n</code></pre> <p>This will return the data in NetCDF format, which we can see here:</p> <p></p>"},{"location":"references/#archivedforecast","title":"/archivedforecast","text":"<p>Up to 4 years of HRRR model runs and 2 years of GFS runs (00z and 12z) are archived.</p> Parameter Description Notes param Valid parameters Default: temperature, dewpoint_temperature, wind_speed, mean_sea_level_pressure, surface_solar_radiation, surface_thermal_radiation, total_cloud_cover location city name or zipcode This value is used to look up latitude/longitude. lat latitude(s) If location is not provided. Up to 100 locations allowed. lon longitude(s) If location is not provided. Up to 100 locations allowed. utc_cycle datetime of the run (00z or 12z) This specifies the model run. E.g. <code>2023-07-01T12:00:00</code> model <code>gfs</code> or <code>hrrr</code> This specifies the archived model (defaults to <code>gfs</code>)."},{"location":"references/#airquality","title":"/airquality","text":"Parameter Description Notes param Valid parameters Default: NO, SO, PM10, PM25, Ozone location city name or zipcode This value is used to look up latitude/longitude. lat latitude(s) If location is not provided. Up to 100 locations allowed. lon longitude(s) If location is not provided. Up to 100 locations allowed. <pre><code>import requests\n\napi_key = 'your-api-key'\n\nr = requests.get('https://api.oikolab.com/airquality',\n                 params={'lat': [32, 24, 40],\n                         'lat': [32, 24, 40],\n                         'location_id': ['store1', 'store2','store3'],\n                 headers={'api-key': api_key}\n                 )\n</code></pre>"},{"location":"references/#epw","title":"/epw","text":"<p>This API will return an EnergyPlus Weather (EPW) file for the given location and year (if applicable). The EPW is generated from ERA5 data on the fly so it will take 10~15 seconds and is not limited to airport locations. Downloading EPW file can also be done via our Weather Downloader App, but if you require many hundreds of EPW files, downloading via API is easier to do.</p> Parameter Description Notes location city name or zipcode This value is used to look up latitude/longitude. year year for AMY If not specified, a TMY file will be returned using the latest 15 years of data (180 months). lat latitude(s) If location is not provided. lon longitude(s) If location is not provided. <pre><code>import requests\n\napi_key = 'your-api-key'\n\nr = requests.get('https://api.oikolab.com/epw',\n                 params={'lat': 23.1,\n                         'lat': 114.2,\n                         'year': 2020,\n                 headers={'api-key': api_key}\n                 )\n</code></pre>"},{"location":"references/#datasets","title":"/datasets","text":"<p>Use this to get an update of the data. If you'd like to check that the data has been updated before making a call, use this API endpoint. This API call does not use any data units.</p> <pre><code>import requests\n\napi_key = 'your-api-key'\n\nr = requests.get('https://api.oikolab.com/datasets'\n                 headers={'api-key': api_key}\n                 )\n</code></pre> <p>This call will return data in JSON format that lists the datasets the available date range for each dataset as shown below.</p> <pre><code>{'era5': {'start': '1940-01-01 00 UTC', \n          'end': '2023-07-18 14 UTC'}, \n 'hrrr': {'forecast_start': '2023-07-24 00 UTC', \n          'forecast_end': '2023-07-26 00 UTC'}, \n 'gfs': {'forecast_start': '2023-07-23 18 UTC', \n         'forecast_end': '2023-08-08 06 UTC'}, \n 'cfs': {'forecast_start': '2023-07-23 06 UTC', \n         'forecast_end': '2023-11-01 00 UTC'}, \n 'silam': {'forecast_start': '2023-07-22 00 UTC', \n           'forecast_end': '2023-07-27 00 UTC'}, \n}\n</code></pre>"},{"location":"tips-tricks/","title":"Tips & Tricks","text":""},{"location":"tips-tricks/#specifying-locations","title":"Specifying locations","text":"<p>When specifying locations using latitude &amp; longitude coordinates, there is no need to specify more than two decimal places.</p>"},{"location":"tips-tricks/#calling-multiple-locations","title":"Calling multiple locations","text":"<p>If you need weather data for say thousands of locations, it's easier to do it with <code>POST</code> operation. Note the slight difference in the way data is specified.</p> <pre><code>import requests\n\napi_key = 'your-api-key'\n\nr = requests.post('https://api.oikolab.com/weather',\n                 data={'param': ['temperature', 'wind_speed'],\n                       'lat': [ ... ],\n                       'lon': [ ... ]',\n                       'location_id': [ ... ]',\n                       }\n                 headers={'api-key': api_key}\n                 )\n</code></pre>"},{"location":"tips-tricks/#notes-on-precipitation","title":"Notes on Precipitation","text":"<p>Weather forecasting would be much simpler if we didn't have to deal with water. From clouds to hails and deluge, hydrodynamics of water in the atmosphere is an incredibly complex phenomenon which is not easily captured by reanalysis or even observation data. For application where this is critical, we recommend considering CHIRP rain dataset.</p>"}]}